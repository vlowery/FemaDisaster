---
title: "Data Visualization from Scratch"
author: "NYC Data Science Academy"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


## Introduction 

+ NYC's Department of Health and Mental Hygiene (DOHMH) conducts unannounced inspections of restaurants at least once a year to check food handling, food temperature, personal hygiene, and vermin control. Since 2010, NYC restaurants have to prominently post their Grade (e.g. A/B/C) which empowers diners with decision-making information and incentivizes establishments to improve their hygiene.

+ Download the csv file from [here](https://data.cityofnewyork.us/Health/DOHMH-New-York-City-Restaurant-Inspection-Results/43nn-pn8j) and rename it to `data.csv`. Move the file to the same directory of your markdown file and use relative path to read it.

+ After you finish the lab, please upload your rmarkdown file (**w/o data**) to the online portal.


## 1. Data Preprocessing

### 1.1 Load libraries
```{r, message=FALSE, warning=FALSE}
library(tidyverse)
```

### 1.2 Load dataset
```{r load_data, message=FALSE, warning=FALSE, cache=TRUE}
raw.df <- readr::read_csv("./data.csv")
```

### 1.3 Clean your data

1. Convert all the column names to lower cases and rename the `cuisine description` column to `cuisine`, `inspection date` to `inspection.date`.
2. Convert the `inspection.date` column from character to date format.
3. If we want to perform analysis for each month, then the date column would be pretty annoying because you have different date for each month. Mutate a new column called `month` that extract the month from `inspection.date` and convert it to numeric. For example, 03/24/2016 -> 03
4. We have scores for some of the observations but their grades are missing. Impute the missing values in grade column with the following rules:
    + 0 <= score < 14: A
    + 14 <= score < 28: B
    + score >= 28: C
    + You can ignore the other grades
5. Rename the description from the action column to something short so it won't blow up your graph.
    + "Violations were cited in the following area(s)." => "violations"
    + "Establishment Closed by DOHMH.  Violations were cited in the following area(s) and those requiring immediate action were addressed." => "closed"
    + "Establishment re-closed by DOHMH" => "reclosed"
    + "No violations were recorded at the time of this inspection." => "no violations"
    + "Establishment re-opened by DOHMH" => "reopened"
    + Hint: `gsub()` function might be helpful. The function takes regular expression as the `pattern` parameter, which means `()` is treated as a special character. You might want to set `fixed=TRUE` in the `gsub()` function to leave the pattern as it is.
    + **reclosed** means they failed the second time during the same inspection cycle and **reopened** means they passed.
6. We want to filter out missing values to make our life easier for further analysis.
    + Filter out missing values from the `boro` column.
    + Filter out missing values and negative values from the `score` column.
    + Filter out any `inspection date` that doesn't make any sense.
7. Select the following columns from `raw.df`: `camis`, `boro`, `cuisine`, `inspection.date`, `action`, `score`, `grade`, `month`
8. Return only the unqiue inspections from the previous step and save it as a new data frame called `inspections`. The reason is one inspection might have multiple observations with different violation code but their actions are the same, so we count them as one.

```{r preprocessing}
# 1. Convert all the column names to lower cases and rename the columns that have empty space.
head(raw.df)
colnames(raw.df) <- tolower(colnames(raw.df))
colnames(raw.df)[8] <- "cuisine"
colnames(raw.df)[9] <- "inspection.date"
# 2. Convert the inspection.date column from character to date format.
format(raw.df$inspection.date, format= "%m/%d/%Y", usetz=FALSE)

# 3. Mutate a new column called month that extract the month from inspection.date and convert it to numeric. For example, 03/24/2016 -> 03
raw.df <- raw.df %>% mutate(month = as.numeric(substr(raw.df$inspection.date, 1, 2)))

# 4. Impute the missing values for the 'grade' column
raw.df <- raw.df %>% mutate(grade = (ifelse((0 <= score) & (score < 14), "A", ifelse((4 <= score) & (score < 28), "B", "C"))))

# 5. Rename the description from the action column to something short so it won't blow up your graph.
raw.df <- raw.df %>% mutate(action = ifelse(raw.df$action == "Violations were cited in the following area(s).", "violations", ifelse(raw.df$action == "No violations were recorded at the time of this inspection.", "no violations", ifelse(raw.df$action == "Establishment re-closed by DOHMH", "re-closed", ifelse(raw.df$action == "Establishment re-opened by DOHMH", "re-opened", "closed")))))

# 6. We want to filter out missing values to make our lives easier for further analysis.
raw.df <- raw.df %>% filter(boro != "0", score >= 0, is.na(score) == FALSE)

# 7. Select the following columns from raw.df: camis, boro, cuisine, inspection.date, action, score, grade, month
inspections <- raw.df %>% select(camis, boro, cuisine, inspection.date, action, score, grade, month)

# 8. Unique inspections
inspections <- inspections %>% distinct(camis, inspection.date, .keep_all = TRUE) %>% arrange(camis, inspection.date)

```


## 2. Data Visualization
### Example questions we want to answer from this dataset

- How do a restaurant's location and type of cuisine affect its inspection results?
- Do restaurants in Manhattan have better scores than those of restaurants in Queens or the Bronx?
- Are Manhattan restaurants cleaner than those in Queens or the Bronx? 
- Do restaurants of your favorite cuisine perform better or worse in health inspections than the rest of the restaurants?

### 2.1 Inspection Grade vs Borough
- Bar plot: Restaurants by borough and grade
- What is your conclusion?
```{r}
library(ggplot2)
inspections %>% group_by(boro, grade) %>% summarise(count = n()) %>% ggplot() + geom_col(aes(x=boro, y=count, fill=grade), position="dodge")

inspections %>% group_by(boro, grade) %>% summarise(count = n()) %>% ggplot() + geom_col(aes(x=boro, y=count, fill=grade), position="fill")
# Conclusion
# That while Manhattan has many more restaurants, each borrow has an almost identical ratio of A to B to C restaurants

```

### 2.2 Inspection Grade vs Cuisine
- Bar plot: Restaurants by cuisine and grade
- There are too many cuisine in the dataset and it will make the plot hard to read. Let's just focus on the top 20 cuisines.
- What is your conclusion?
```{r}
head(inspections)
inspections %>% group_by(cuisine) %>% summarise(frequency = n(), avg_score = mean(score)) %>% arrange(desc(frequency)) %>% head(20) %>% mutate(name = fct_reorder(cuisine, desc(avg_score))) %>% ggplot() + geom_col(aes(y=name, x=avg_score)) + ggtitle("Top 20 Cuisines (freq. count) and Their Avg. Scores")
# Conclusions
#Typical Americana cuisine ranks cleanest, or most law-abiding. 
```

### 2.3 Scores vs. Borough
- Since grades couldn't differentiate boroughs, let's plot restaurants by scores instead and use a density plot to account for the disparity in number of restaurants by borough.
- Density plot: Restaurants by score and borough
- What is your conclusion?
```{r}
inspections %>% group_by(boro) %>% ggplot() + geom_density(aes(x=score, color=boro)) + coord_cartesian(xlim = c(0, 75))
#Conclusion
# Score is also not a great way to distinguish restaurants in different boros, as they have roughly the same density of scores boro to boro.
```

### What about inspection closures?
- Scores don't tie directly to restaurant closures (e.g. public health hazard)

### 2.4 Closures vs. Borough

- Reclosed means they failed the second time during the same inspection cycle.
- Defined the following ratios:
    - Inspection closure ratio for each borough: % of inspections that lead to the restaurant being closed (including closed and reclosed)
    - Repeat closure ratio for each borough: % of restaurants that were closed more than once for different inspection cycles (just count the number of closed)
- It could be either a barplot with two different ratios for each borough or a scatterplot with two ratios as x and y axises.
- What is your conclusion?
```{r}
inspections %>% group_by(boro) %>% summarise(closed_percentage = (sum(action == "closed") + sum(action == "re-closed"))/length(action)*100, repeat_closed_percentage = (sum(action == "re-closed"))/length(action)*100) %>% ggplot(aes(x=closed_percentage, y=repeat_closed_percentage)) + geom_point(aes(color=boro)) + geom_smooth(method="lm")
# Conclusions
# Boros with a higher closed percentage are more likely to be repeat offenders and have businesses re-close.
```

### 2.5 Closures vs. Cuisine and Borough
- Finally, what if we combined both dimensions of location and cuisine? Intuitively, certain cuisines could fare better or worse in health inspections depending on the neighborhood. Used faceted bar plots of inspection closure ratios by borough with the top 20 cuisine types.
- Facect barplots of insepction closure ratios by borough with top 20 cuisine types.
- What is your conclusion?
```{r}
inspections %>% group_by(cuisine, boro) %>% summarise(frequency = n(), avg_score = mean(score), closed_percentage = (sum(action == "closed") + sum(action == "re-closed"))/length(action)*100) %>% ungroup() %>% arrange(desc(frequency)) %>% group_by(boro) %>% top_n(20) %>% arrange(boro) %>% ggplot() + geom_col(aes(x=cuisine, y=closed_percentage)) + facet_grid(boro ~ .)

```


### 2.6 Trend of score by month
- Find the trend of average scores by month and borough. Graph your result.
- What is your conclusion?
```{r}
inspections %>% group_by(boro, month) %>% summarise(avg_score = mean(score)) %>% ggplot(aes(x=month, y=avg_score, color=boro)) + geom_point() + geom_smooth(se=FALSE) + scale_x_continuous(breaks=1:12, labels=())
# freqpoly also works
# Conclusions
# Restaraunts earn better scores (or are cleaner) in the earlier months of the year and worse off at the end of the year.
```


### 2.7 Trend of inspection closure ratio by month
- Find the trend of the inspection closure ratio by month and borough. Graph your result.
- What is your conclusion?
```{r}
inspections %>% group_by(boro, month) %>% summarise(closed_percentage = (sum(action == "closed") + sum(action == "re-closed"))/length(action)*100) %>% ggplot(aes(x=month, y=closed_percentage, color=boro)) + geom_point() + geom_smooth(se=FALSE)


```

